searchState.loadedDescShard("starry", 0, "项目简介\nLoader for loading apps.\nMacro to generate syscall body\nThe size of the kernel stack.\nThe base address of the user space.\nThe size of the user space.\nThe size of the user stack.\nThe highest address of the user stack.\nThe information of a given ELF file\nThe segment of the elf file, which is used to map the elf …\nThe auxiliary vectors of the ELF file\nThe data of the segment\nThe entry point of the ELF file\nThe flags of the segment which is used to set the page …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad the ELF files by the given app name and return the …\nThe offset of the segment relative to the start of the page\nThe segments of the ELF file\nThe size of the segment\nThe start virtual address of the segment\nLoad a user app.\n块设备\n字符设备\n目录\nFIFO\n文件系统信息\n符号链接\n常规文件\nSocket\n未知类型文件\nWhiteout\npadding\npadding\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n最后一次访问时间(纳秒)\n最后一次访问时间(秒)\n块大小\n块个数\n最后一次改变状态时间(纳秒)\n最后一次改变状态时间(秒)\n设备\n用户组id\ninode 编号\n文件类型\n最后一次修改时间(纳秒)\n最后一次修改时间(秒)\n硬链接数\n设备号\n文件大小\n用户id\n将当前工作目录更改为指定路径。\n…\nThe ioctl() system call manipulates the underlying device …\n创建一个链接 new_path 指向 old_path。 old_path - …\n…\n功能:移除指定文件的链接(可用于删除文件);\nDon’t use a file.\nMap address must be exactly as requested, no matter …\nDon’t check for reservations.\nChanges private; copy pages on write.\nShare changes\nAllocation is for a stack.\nflags for sys_mmap\npermissions for sys_mmap\nPage can be executed.\nPage can be read.\nPage can be written.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nsys_uname 中指定的结构体类型\n域名\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n硬件类型\n网络上的主机名称\n发行编号\n获取系统信息\n系统名称\n版本\nARCH_PRCTL codes\nThe setting of the flag manipulated by ARCH_SET_CPUID\nGet the FS segment base\nGet the GS segment base\nEnable (addr != 0) or disable (addr == 0) the cpuid …\nSet the FS segment base\nSet the GS segment base\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nArguments for riscv\n执行一个指定的程序\nTo set the clear_child_tid field in the task extended data.\n…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n功能：获取进程时间； …\nTask extended data for the monolithic kernel.\n添加子任务\nThe virtual memory address space.\nChildren\nThe clear thread tid field\n实现简易的clone系统调用 …\n进入内核态时更新时间统计\n进入用户态时更新时间统计\n将当前进程替换为指定的用户程序\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe heap manager\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe resource namespace\nParent\n获取父任务的 PID，如果父任务不存在则返回 …\nThe process ID.\n移除子任务\n设置父任务\nThe time statistics\nThe user space context.\n…\n成功时返回新的实际堆顶，失败时返回None …\n成功时返回新的实际堆顶，失败时返回None …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n成功时返回新的实际堆顶，失败时返回None …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n在内核态流过的累计时间\n最近一次进入内核态的时间\n最近一次进入用户态的时间\n在用户态流过的累计时间")